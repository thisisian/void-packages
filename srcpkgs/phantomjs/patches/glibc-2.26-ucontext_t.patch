--- src/breakpad/src/client/linux/handler/exception_handler.h	2015-01-24 03:19:52.000000000 +0100
+++ src/breakpad/src/client/linux/handler/exception_handler.h	2017-11-12 12:29:48.306216165 +0100
@@ -172,7 +172,7 @@
   struct CrashContext {
     siginfo_t siginfo;
     pid_t tid;  // the crashing thread.
-    struct ucontext context;
+    ucontext_t context;
 #if !defined(__ARM_EABI__)
     // #ifdef this out because FP state is not part of user ABI for Linux ARM.
     struct _libc_fpstate float_state;
--- src/breakpad/src/client/linux/handler/exception_handler.cc	2015-01-24 03:19:52.000000000 +0100
+++ src/breakpad/src/client/linux/handler/exception_handler.cc	2017-11-12 12:30:22.866218630 +0100
@@ -342,10 +342,10 @@
   }
   CrashContext context;
   memcpy(&context.siginfo, info, sizeof(siginfo_t));
-  memcpy(&context.context, uc, sizeof(struct ucontext));
+  memcpy(&context.context, uc, sizeof(ucontext_t));
 #if !defined(__ARM_EABI__)
   // FP state is not part of user ABI on ARM Linux.
-  struct ucontext *uc_ptr = (struct ucontext*)uc;
+  ucontext_t *uc_ptr = (ucontext_t*)uc;
   if (uc_ptr->uc_mcontext.fpregs) {
     memcpy(&context.float_state,
            uc_ptr->uc_mcontext.fpregs,
--- src/breakpad/src/client/linux/minidump_writer/minidump_writer.cc	2015-01-24 03:19:52.000000000 +0100
+++ src/breakpad/src/client/linux/minidump_writer/minidump_writer.cc	2017-11-12 12:39:02.862255717 +0100
@@ -163,7 +163,7 @@
 // Juggle an x86 ucontext into minidump format
 //   out: the minidump structure
 //   info: the collection of register structures.
-static void CPUFillFromUContext(MDRawContextX86 *out, const ucontext *uc,
+static void CPUFillFromUContext(MDRawContextX86 *out, const ucontext_t *uc,
                                 const struct _libc_fpstate* fp) {
   const greg_t* regs = uc->uc_mcontext.gregs;
 
@@ -263,7 +263,7 @@
   memcpy(&out->flt_save.xmm_registers, &info.fpregs.xmm_space, 16 * 16);
 }
 
-static void CPUFillFromUContext(MDRawContextAMD64 *out, const ucontext *uc,
+static void CPUFillFromUContext(MDRawContextAMD64 *out, const ucontext_t *uc,
                                 const struct _libc_fpstate* fpregs) {
   const greg_t* regs = uc->uc_mcontext.gregs;
 
@@ -330,7 +330,7 @@
 #endif
 }
 
-static void CPUFillFromUContext(MDRawContextARM *out, const ucontext *uc,
+static void CPUFillFromUContext(MDRawContextARM *out, const ucontext_t *uc,
                                 const struct _libc_fpstate* fpregs) {
   out->context_flags = MD_CONTEXT_ARM_FULL;
 
@@ -1300,7 +1300,7 @@
   }
 
   const char* const filename_;  // output filename
-  const struct ucontext* const ucontext_;  // also from the signal handler
+  const ucontext_t* const ucontext_;  // also from the signal handler
   const struct _libc_fpstate* const float_state_;  // ditto
   LinuxDumper* dumper_;
   MinidumpFileWriter minidump_writer_;
