--- qtwayland/src/hardwareintegration/client/xcomposite-egl/qwaylandxcompositeeglwindow.cpp	2018-02-05 14:01:14.000000000 +0100
+++ qtwayland/src/hardwareintegration/client/xcomposite-egl/qwaylandxcompositeeglwindow.cpp	2018-02-14 09:45:48.986677335 +0100
@@ -121,7 +121,7 @@
     XCompositeRedirectWindow(m_glxIntegration->xDisplay(), m_xWindow, CompositeRedirectManual);
     XMapWindow(m_glxIntegration->xDisplay(), m_xWindow);
 
-    m_surface = eglCreateWindowSurface(m_glxIntegration->eglDisplay(), m_config, m_xWindow,0);
+    m_surface = eglCreateWindowSurface(m_glxIntegration->eglDisplay(), m_config, (void *)m_xWindow,0);
     if (m_surface == EGL_NO_SURFACE) {
         qFatal("Could not make eglsurface");
     }
--- qtwayland/src/hardwareintegration/compositor/xcomposite-egl/xcompositeeglintegration.cpp	2018-02-05 14:01:14.000000000 +0100
+++ qtwayland/src/hardwareintegration/compositor/xcomposite-egl/xcompositeeglintegration.cpp	2018-02-14 09:47:53.579686221 +0100
@@ -129,7 +129,7 @@
     attribList.append(EGL_TEXTURE_2D);
     attribList.append(EGL_NONE);
 
-    EGLSurface surface = eglCreatePixmapSurface(m_integration->eglDisplay(),config,pixmap,attribList.constData());
+    EGLSurface surface = eglCreatePixmapSurface(m_integration->eglDisplay(),config,(void *)pixmap,attribList.constData());
     if (surface == EGL_NO_SURFACE) {
         qDebug() << "Failed to create eglsurface" << pixmap << compositorBuffer->window();
     }
--- qtwayland/src/hardwareintegration/compositor/brcm-egl/brcmeglintegration.cpp	2018-02-05 14:01:14.000000000 +0100
+++ qtwayland/src/hardwareintegration/compositor/brcm-egl/brcmeglintegration.cpp	2018-02-14 11:39:28.604163714 +0100
@@ -52,8 +52,8 @@
 
 #include <EGL/eglext_brcm.h>
 
-#include <GLES2/gl2.h>
-#include <GLES2/gl2ext.h>
+#include <GLES3/gl3.h>
+#include <GLES3/gl3ext.h>
 
 QT_BEGIN_NAMESPACE
 
