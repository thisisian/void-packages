diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3d2883f..bf90ab0 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -241,7 +241,14 @@ set_package_properties(X11_XCB PROPERTIES
                        TYPE OPTIONAL)
 
 # dependencies for QPA plugin
-find_package(Qt5PlatformSupport REQUIRED)
+if(Qt5Core_VERSION VERSION_LESS "5.8.0")
+    find_package(Qt5PlatformSupport REQUIRED)
+else()
+    find_package(Qt5FontDatabaseSupport REQUIRED)
+    find_package(Qt5ThemeSupport REQUIRED)
+    find_package(Qt5EventDispatcherSupport REQUIRED)
+endif()
+
 find_package(Freetype REQUIRED)
 set_package_properties(Freetype PROPERTIES DESCRIPTION "A font rendering engine"
                        URL "http://www.freetype.org"
diff --git a/cmake/modules/FindQt5EventDispatcherSupport.cmake b/cmake/modules/FindQt5EventDispatcherSupport.cmake
new file mode 100644
index 0000000..948efe0
--- /dev/null
+++ cmake/modules/FindQt5EventDispatcherSupport.cmake
@@ -0,0 +1,122 @@
+#.rst:
+# FindQt5EventDispatcherSupport
+# -------
+#
+# Try to find Qt5EventDispatcherSupport on a Unix system.
+#
+# This will define the following variables:
+#
+# ``Qt5EventDispatcherSupport_FOUND``
+#     True if (the requested version of) Qt5EventDispatcherSupport is available
+# ``Qt5EventDispatcherSupport_VERSION``
+#     The version of Qt5EventDispatcherSupport
+# ``Qt5EventDispatcherSupport_LIBRARIES``
+#     This can be passed to target_link_libraries() instead of the ``Qt5EventDispatcherSupport::Qt5EventDispatcherSupport``
+#     target
+# ``Qt5EventDispatcherSupport_INCLUDE_DIRS``
+#     This should be passed to target_include_directories() if the target is not
+#     used for linking
+# ``Qt5EventDispatcherSupport_DEFINITIONS``
+#     This should be passed to target_compile_options() if the target is not
+#     used for linking
+#
+# If ``Qt5EventDispatcherSupport_FOUND`` is TRUE, it will also define the following imported target:
+#
+# ``Qt5EventDispatcherSupport::Qt5EventDispatcherSupport``
+#     The Qt5EventDispatcherSupport library
+#
+# In general we recommend using the imported target, as it is easier to use.
+# Bear in mind, however, that if the target is in the link interface of an
+# exported library, it must be made available by the package config file.
+
+#=============================================================================
+# Copyright 2014 Alex Merry <alex.merry@kde.org>
+# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>
+# Copyright 2016 Takahiro Hashimoto <kenya888@gmail.com>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the copyright
+#    notice, this list of conditions and the following disclaimer in the
+#    documentation and/or other materials provided with the distribution.
+# 3. The name of the author may not be used to endorse or promote products
+#    derived from this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+#=============================================================================
+
+if(CMAKE_VERSION VERSION_LESS 2.8.12)
+    message(FATAL_ERROR "CMake 2.8.12 is required by FindQt5EventDispatcherSupport.cmake")
+endif()
+if(CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 2.8.12)
+    message(AUTHOR_WARNING "Your project should require at least CMake 2.8.12 to use FindQt5EventDispatcherSupport.cmake")
+endif()
+
+# Use pkg-config to get the directories and then use these values
+# in the FIND_PATH() and FIND_LIBRARY() calls
+find_package(PkgConfig)
+pkg_check_modules(PKG_Qt5EventDispatcherSupport QUIET Qt5Gui)
+
+set(Qt5EventDispatcherSupport_DEFINITIONS ${PKG_Qt5EventDispatcherSupport_CFLAGS_OTHER})
+set(Qt5EventDispatcherSupport_VERSION ${PKG_Qt5EventDispatcherSupport_VERSION})
+
+find_path(Qt5EventDispatcherSupport_INCLUDE_DIR
+    NAMES
+        QtEventDispatcherSupport/private/qunixeventdispatcher_qpa_p.h
+    HINTS
+        ${PKG_Qt5EventDispatcherSupport_INCLUDEDIR}/QtEventDispatcherSupport/${PKG_Qt5EventDispatcherSupport_VERSION}/
+)
+find_library(Qt5EventDispatcherSupport_LIBRARY
+    NAMES
+        Qt5EventDispatcherSupport
+    HINTS
+        ${PKG_Qt5EventDispatcherSupport_LIBRARY_DIRS}
+)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Qt5EventDispatcherSupport
+    FOUND_VAR
+        Qt5EventDispatcherSupport_FOUND
+    REQUIRED_VARS
+        Qt5EventDispatcherSupport_LIBRARY
+        Qt5EventDispatcherSupport_INCLUDE_DIR
+    VERSION_VAR
+        Qt5EventDispatcherSupport_VERSION
+)
+
+if(Qt5EventDispatcherSupport_FOUND AND NOT TARGET Qt5EventDispatcherSupport::Qt5EventDispatcherSupport)
+    add_library(Qt5EventDispatcherSupport::Qt5EventDispatcherSupport UNKNOWN IMPORTED)
+    set_target_properties(Qt5EventDispatcherSupport::Qt5EventDispatcherSupport PROPERTIES
+        IMPORTED_LOCATION "${Qt5EventDispatcherSupport_LIBRARY}"
+        INTERFACE_COMPILE_OPTIONS "${Qt5EventDispatcherSupport_DEFINITIONS}"
+        INTERFACE_INCLUDE_DIRECTORIES "${Qt5EventDispatcherSupport_INCLUDE_DIR}"
+    )
+endif()
+
+mark_as_advanced(Qt5EventDispatcherSupport_LIBRARY Qt5EventDispatcherSupport_INCLUDE_DIR)
+
+# compatibility variables
+set(Qt5EventDispatcherSupport_LIBRARIES ${Qt5EventDispatcherSupport_LIBRARY})
+set(Qt5EventDispatcherSupport_INCLUDE_DIRS ${Qt5EventDispatcherSupport_INCLUDE_DIR})
+set(Qt5EventDispatcherSupport_VERSION_STRING ${Qt5EventDispatcherSupport_VERSION})
+
+
+include(FeatureSummary)
+set_package_properties(Qt5EventDispatcherSupport PROPERTIES
+    URL "http://www.qt.io"
+    DESCRIPTION "Qt EventDispatcherSupport module."
+)
+
diff --git a/cmake/modules/FindQt5FontDatabaseSupport.cmake b/cmake/modules/FindQt5FontDatabaseSupport.cmake
new file mode 100644
index 0000000..d3e66cd
--- /dev/null
+++ cmake/modules/FindQt5FontDatabaseSupport.cmake
@@ -0,0 +1,122 @@
+#.rst:
+# FindQt5FontDatabaseSupport
+# -------
+#
+# Try to find Qt5FontDatabaseSupport on a Unix system.
+#
+# This will define the following variables:
+#
+# ``Qt5FontDatabaseSupport_FOUND``
+#     True if (the requested version of) Qt5FontDatabaseSupport is available
+# ``Qt5FontDatabaseSupport_VERSION``
+#     The version of Qt5FontDatabaseSupport
+# ``Qt5FontDatabaseSupport_LIBRARIES``
+#     This can be passed to target_link_libraries() instead of the ``Qt5FontDatabaseSupport::Qt5FontDatabaseSupport``
+#     target
+# ``Qt5FontDatabaseSupport_INCLUDE_DIRS``
+#     This should be passed to target_include_directories() if the target is not
+#     used for linking
+# ``Qt5FontDatabaseSupport_DEFINITIONS``
+#     This should be passed to target_compile_options() if the target is not
+#     used for linking
+#
+# If ``Qt5FontDatabaseSupport_FOUND`` is TRUE, it will also define the following imported target:
+#
+# ``Qt5FontDatabaseSupport::Qt5FontDatabaseSupport``
+#     The Qt5FontDatabaseSupport library
+#
+# In general we recommend using the imported target, as it is easier to use.
+# Bear in mind, however, that if the target is in the link interface of an
+# exported library, it must be made available by the package config file.
+
+#=============================================================================
+# Copyright 2014 Alex Merry <alex.merry@kde.org>
+# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>
+# Copyright 2016 Takahiro Hashimoto <kenya888@gmail.com>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the copyright
+#    notice, this list of conditions and the following disclaimer in the
+#    documentation and/or other materials provided with the distribution.
+# 3. The name of the author may not be used to endorse or promote products
+#    derived from this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+#=============================================================================
+
+if(CMAKE_VERSION VERSION_LESS 2.8.12)
+    message(FATAL_ERROR "CMake 2.8.12 is required by FindQt5FontDatabaseSupport.cmake")
+endif()
+if(CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 2.8.12)
+    message(AUTHOR_WARNING "Your project should require at least CMake 2.8.12 to use FindQt5FontDatabaseSupport.cmake")
+endif()
+
+# Use pkg-config to get the directories and then use these values
+# in the FIND_PATH() and FIND_LIBRARY() calls
+find_package(PkgConfig)
+pkg_check_modules(PKG_Qt5FontDatabaseSupport QUIET Qt5Gui)
+
+set(Qt5FontDatabaseSupport_DEFINITIONS ${PKG_Qt5FontDatabaseSupport_CFLAGS_OTHER})
+set(Qt5FontDatabaseSupport_VERSION ${PKG_Qt5FontDatabaseSupport_VERSION})
+
+find_path(Qt5FontDatabaseSupport_INCLUDE_DIR
+    NAMES
+        QtFontDatabaseSupport/private/qfontconfigdatabase_p.h
+    HINTS
+        ${PKG_Qt5FontDatabaseSupport_INCLUDEDIR}/QtFontDatabaseSupport/${PKG_Qt5FontDatabaseSupport_VERSION}/
+)
+find_library(Qt5FontDatabaseSupport_LIBRARY
+    NAMES
+        Qt5FontDatabaseSupport
+    HINTS
+        ${PKG_Qt5FontDatabaseSupport_LIBRARY_DIRS}
+)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Qt5FontDatabaseSupport
+    FOUND_VAR
+        Qt5FontDatabaseSupport_FOUND
+    REQUIRED_VARS
+        Qt5FontDatabaseSupport_LIBRARY
+        Qt5FontDatabaseSupport_INCLUDE_DIR
+    VERSION_VAR
+        Qt5FontDatabaseSupport_VERSION
+)
+
+if(Qt5FontDatabaseSupport_FOUND AND NOT TARGET Qt5FontDatabaseSupport::Qt5FontDatabaseSupport)
+    add_library(Qt5FontDatabaseSupport::Qt5FontDatabaseSupport UNKNOWN IMPORTED)
+    set_target_properties(Qt5FontDatabaseSupport::Qt5FontDatabaseSupport PROPERTIES
+        IMPORTED_LOCATION "${Qt5FontDatabaseSupport_LIBRARY}"
+        INTERFACE_COMPILE_OPTIONS "${Qt5FontDatabaseSupport_DEFINITIONS}"
+        INTERFACE_INCLUDE_DIRECTORIES "${Qt5FontDatabaseSupport_INCLUDE_DIR}"
+    )
+endif()
+
+mark_as_advanced(Qt5FontDatabaseSupport_LIBRARY Qt5FontDatabaseSupport_INCLUDE_DIR)
+
+# compatibility variables
+set(Qt5FontDatabaseSupport_LIBRARIES ${Qt5FontDatabaseSupport_LIBRARY})
+set(Qt5FontDatabaseSupport_INCLUDE_DIRS ${Qt5FontDatabaseSupport_INCLUDE_DIR})
+set(Qt5FontDatabaseSupport_VERSION_STRING ${Qt5FontDatabaseSupport_VERSION})
+
+
+include(FeatureSummary)
+set_package_properties(Qt5FontDatabaseSupport PROPERTIES
+    URL "http://www.qt.io"
+    DESCRIPTION "Qt FontDatabaseSupport module."
+)
+
diff --git a/cmake/modules/FindQt5ThemeSupport.cmake b/cmake/modules/FindQt5ThemeSupport.cmake
new file mode 100644
index 0000000..5588a76
--- /dev/null
+++ cmake/modules/FindQt5ThemeSupport.cmake
@@ -0,0 +1,122 @@
+#.rst:
+# FindQt5ThemeSupport
+# -------
+#
+# Try to find Qt5ThemeSupport on a Unix system.
+#
+# This will define the following variables:
+#
+# ``Qt5ThemeSupport_FOUND``
+#     True if (the requested version of) Qt5ThemeSupport is available
+# ``Qt5ThemeSupport_VERSION``
+#     The version of Qt5ThemeSupport
+# ``Qt5ThemeSupport_LIBRARIES``
+#     This can be passed to target_link_libraries() instead of the ``Qt5ThemeSupport::Qt5ThemeSupport``
+#     target
+# ``Qt5ThemeSupport_INCLUDE_DIRS``
+#     This should be passed to target_include_directories() if the target is not
+#     used for linking
+# ``Qt5ThemeSupport_DEFINITIONS``
+#     This should be passed to target_compile_options() if the target is not
+#     used for linking
+#
+# If ``Qt5ThemeSupport_FOUND`` is TRUE, it will also define the following imported target:
+#
+# ``Qt5ThemeSupport::Qt5ThemeSupport``
+#     The Qt5ThemeSupport library
+#
+# In general we recommend using the imported target, as it is easier to use.
+# Bear in mind, however, that if the target is in the link interface of an
+# exported library, it must be made available by the package config file.
+
+#=============================================================================
+# Copyright 2014 Alex Merry <alex.merry@kde.org>
+# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>
+# Copyright 2016 Takahiro Hashimoto <kenya888@gmail.com>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the copyright
+#    notice, this list of conditions and the following disclaimer in the
+#    documentation and/or other materials provided with the distribution.
+# 3. The name of the author may not be used to endorse or promote products
+#    derived from this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+#=============================================================================
+
+if(CMAKE_VERSION VERSION_LESS 2.8.12)
+    message(FATAL_ERROR "CMake 2.8.12 is required by FindQt5ThemeSupport.cmake")
+endif()
+if(CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 2.8.12)
+    message(AUTHOR_WARNING "Your project should require at least CMake 2.8.12 to use FindQt5ThemeSupport.cmake")
+endif()
+
+# Use pkg-config to get the directories and then use these values
+# in the FIND_PATH() and FIND_LIBRARY() calls
+find_package(PkgConfig)
+pkg_check_modules(PKG_Qt5ThemeSupport QUIET Qt5Gui)
+
+set(Qt5ThemeSupport_DEFINITIONS ${PKG_Qt5ThemeSupport_CFLAGS_OTHER})
+set(Qt5ThemeSupport_VERSION ${PKG_Qt5ThemeSupport_VERSION})
+
+find_path(Qt5ThemeSupport_INCLUDE_DIR
+    NAMES
+        QtThemeSupport/private/qgenericunixthemes_p.h
+    HINTS
+        ${PKG_Qt5ThemeSupport_INCLUDEDIR}/QtThemeSupport/${PKG_Qt5ThemeSupport_VERSION}/
+)
+find_library(Qt5ThemeSupport_LIBRARY
+    NAMES
+        Qt5ThemeSupport
+    HINTS
+        ${PKG_Qt5ThemeSupport_LIBRARY_DIRS}
+)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Qt5ThemeSupport
+    FOUND_VAR
+        Qt5ThemeSupport_FOUND
+    REQUIRED_VARS
+        Qt5ThemeSupport_LIBRARY
+        Qt5ThemeSupport_INCLUDE_DIR
+    VERSION_VAR
+        Qt5ThemeSupport_VERSION
+)
+
+if(Qt5ThemeSupport_FOUND AND NOT TARGET Qt5ThemeSupport::Qt5ThemeSupport)
+    add_library(Qt5ThemeSupport::Qt5ThemeSupport UNKNOWN IMPORTED)
+    set_target_properties(Qt5ThemeSupport::Qt5ThemeSupport PROPERTIES
+        IMPORTED_LOCATION "${Qt5ThemeSupport_LIBRARY}"
+        INTERFACE_COMPILE_OPTIONS "${Qt5ThemeSupport_DEFINITIONS}"
+        INTERFACE_INCLUDE_DIRECTORIES "${Qt5ThemeSupport_INCLUDE_DIR}"
+    )
+endif()
+
+mark_as_advanced(Qt5ThemeSupport_LIBRARY Qt5ThemeSupport_INCLUDE_DIR)
+
+# compatibility variables
+set(Qt5ThemeSupport_LIBRARIES ${Qt5ThemeSupport_LIBRARY})
+set(Qt5ThemeSupport_INCLUDE_DIRS ${Qt5ThemeSupport_INCLUDE_DIR})
+set(Qt5ThemeSupport_VERSION_STRING ${Qt5ThemeSupport_VERSION})
+
+
+include(FeatureSummary)
+set_package_properties(Qt5ThemeSupport PROPERTIES
+    URL "http://www.qt.io"
+    DESCRIPTION "Qt ThemeSupport module."
+)
+
diff --git a/plugins/qpa/CMakeLists.txt b/plugins/qpa/CMakeLists.txt
index 1a91a0f..6e92946 100644
--- plugins/qpa/CMakeLists.txt
+++ plugins/qpa/CMakeLists.txt
@@ -1,6 +1,5 @@
 include_directories(${Qt5Core_PRIVATE_INCLUDE_DIRS})
 include_directories(${Qt5Gui_PRIVATE_INCLUDE_DIRS})
-add_definitions(-DQ_FONTCONFIGDATABASE)
 
 set(QPA_SOURCES
     abstractplatformcontext.cpp
@@ -19,10 +18,22 @@ include(ECMQtDeclareLoggingCategory)
 ecm_qt_declare_logging_category(QPA_SOURCES HEADER logging.h IDENTIFIER KWIN_QPA CATEGORY_NAME kwin_qpa_plugin DEFAULT_SEVERITY Critical)
 
 add_library(KWinQpaPlugin MODULE ${QPA_SOURCES})
+
+if(Qt5Core_VERSION VERSION_LESS "5.8.0")
+    set(QT5PLATFORMSUPPORT_LIBS Qt5PlatformSupport::Qt5PlatformSupport)
+else()
+    add_definitions(-DQ_FONTCONFIGDATABASE)
+    set(QT5PLATFORMSUPPORT_LIBS
+        Qt5FontDatabaseSupport::Qt5FontDatabaseSupport
+        Qt5ThemeSupport::Qt5ThemeSupport
+        Qt5EventDispatcherSupport::Qt5EventDispatcherSupport
+)
+endif()
+
 target_link_libraries(KWinQpaPlugin
     kwin
     KF5::WaylandClient
-    Qt5PlatformSupport::Qt5PlatformSupport
+    ${QT5PLATFORMSUPPORT_LIBS}
     ${FONTCONFIG_LIBRARIES}
     ${FREETYPE_LIBRARIES}
 )
diff --git a/plugins/qpa/integration.cpp b/plugins/qpa/integration.cpp
index 555abcf..2ea1b42 100644
--- plugins/qpa/integration.cpp
+++ plugins/qpa/integration.cpp
@@ -46,9 +46,16 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #include <qpa/qplatforminputcontextfactory_p.h>
 #include <qpa/qwindowsysteminterface.h>
 #include <QtCore/private/qeventdispatcher_unix_p.h>
+
+#if QT_VERSION >= 0x050800
+#include <QtFontDatabaseSupport/private/qgenericunixfontdatabase_p.h>
+#include <QtThemeSupport/private/qgenericunixthemes_p.h>
+#include <QtEventDispatcherSupport/private/qunixeventdispatcher_qpa_p.h>
+#else
 #include <QtPlatformSupport/private/qgenericunixfontdatabase_p.h>
 #include <QtPlatformSupport/private/qgenericunixthemes_p.h>
 #include <QtPlatformSupport/private/qunixeventdispatcher_qpa_p.h>
+#endif
 
 namespace KWin
 {
